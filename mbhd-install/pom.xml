<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>mbhd-parent</artifactId>
    <groupId>org.multibit.hd</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>mbhd-install</artifactId>

  <name>MultiBit HD Installer</name>
  <description>Build the installers and perform any code signing.</description>

  <profiles>

    <!-- Create JWrapper installers based on the full dependency JAR -->
    <profile>

      <!-- To activate this, build as 'mvn -Dinstaller=true clean package' -->
      <id>execute-jwrapper</id>
      <activation>
        <property>
          <name>installer</name>
          <value>true</value>
        </property>
      </activation>

      <build>

        <plugins>

          <!-- Ensure MultiBit HD launcher is compiled using JWrapper utilities -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun.version}</version>

            <executions>

              <!-- Ensure the presence of the correct JWrapper JAR -->
              <execution>
                <id>get-jwrapper</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Transfer classpath over to Ant -->
                    <property name="compile_classpath" refid="maven.compile.classpath"/>
                    <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                    <property name="test_classpath" refid="maven.test.classpath"/>
                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                    <property name="build_version" value="${project.version}"/>

                    <ant antfile="${basedir}/build.xml">
                      <target name="get-jwrapper"/>
                    </ant>
                  </target>

                </configuration>
              </execution>

              <!-- Ensure the presence of the correct logo (standard or trademark) -->
              <execution>
                <id>trademark-logo</id>
                <phase>compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>

                    <ant antfile="${basedir}/build.xml">
                      <target name="trademark-logo"/>
                    </ant>
                  </target>

                </configuration>
              </execution>

              <!-- Compile the installer specific code (launcher etc) -->
              <execution>
                <id>compile-launcher</id>
                <phase>compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Transfer classpath over to Ant -->
                    <property name="compile_classpath" refid="maven.compile.classpath"/>
                    <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                    <property name="test_classpath" refid="maven.test.classpath"/>
                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                    <property name="build_version" value="${project.version}"/>

                    <ant antfile="${basedir}/build.xml">
                      <target name="compile-launcher"/>
                    </ant>
                  </target>

                </configuration>
              </execution>

              <!-- Create the installer by wrapping the shaded executable JAR -->
              <execution>
                <id>release-all</id>
                <phase>install</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Transfer classpath over to Ant -->
                    <property name="compile_classpath" refid="maven.compile.classpath"/>
                    <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                    <property name="test_classpath" refid="maven.test.classpath"/>
                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                    <property name="build_version" value="${project.version}"/>

                    <ant antfile="${basedir}/build.xml">
                      <target name="release-all"/>
                    </ant>
                  </target>

                </configuration>
              </execution>

            </executions>

            <!-- Ensure Ant has access to tools.jar (groupId, artifactId and version are notional) -->
            <dependencies>
              <dependency>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
                <version>1.7</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
            </dependencies>

          </plugin>

        </plugins>

      </build>

    </profile>

  </profiles>

  <!-- These plugins will execute on every build -->
  <build>

    <plugins>

      <!-- Shade plugin is required to make a "slim" JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>META-INF/*.less</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <id>make-slim-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.multibit.hd.ui.MultiBitHD</mainClass>
                </transformer>
              </transformers>
              <!-- This entry links to the JWrapper configurations -->
              <finalName>multibit-hd</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <dependencies>

    <!-- MultiBit HD dependencies to ensure build order -->
    <dependency>
      <groupId>org.multibit.hd</groupId>
      <artifactId>mbhd-swing</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>

    <!-- JWrapper contains jwrapper_utils.jar that will need to be expanded
        before the build so that it appears in the correct location

        Unless you are actively developing the installer code this section
        should remain commented out

        Marking src/main/jwrapper as a source root will ensure the IDE
        is able to resolve JWrapper utility classes
    <dependency>
      <groupId>jwrapper</groupId>
      <artifactId>jwrapper-utils</artifactId>
      <version>00028973924</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/jwrapper_utils.jar</systemPath>
    </dependency>
        -->

  </dependencies>

</project>