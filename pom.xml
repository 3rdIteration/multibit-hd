<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.bitcoinj</groupId>
    <artifactId>multibit-hd</artifactId>
    <version>1.0-SNAPSHOT</version>

    <repositories>
        <repository>
            <id>bitcoinj-releases</id>
            <name>Bitcoinj Releases</name>
            <url>http://distribution.bitcoinj.googlecode.com/git/releases</url>
            <releases />
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${java.home}/../bin/javafxpackager</executable>
                    <arguments>
                        <argument>-createjar</argument>
                        <argument>-nocss2bin</argument>
                        <argument>-appclass</argument>
                        <argument>${exec.mainClass}</argument>
                        <argument>-srcdir</argument>
                        <argument>target/classes</argument>
                        <argument>-outdir</argument>
                        <argument>target</argument>
                        <argument>-outfile</argument>
                        <argument>multibit-hd-exe</argument>
                    </arguments>
                </configuration>
            </plugin>

            <!-- This will copy all your dependencies to target/libs, which will be picked up by the ant task below -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/libs</outputDirectory>
                            <includeScope>compile</includeScope>
                            <includeScope>runtime</includeScope>
                            <excludeArtifactIds>javafx</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>create-javafx-packages</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:fx="javafx:com.sun.javafx.tools.ant">
                                    <echo>Start of Ant tasks.</echo>
                                    <taskdef
                                            uri="javafx:com.sun.javafx.tools.ant"
                                            resource="com/sun/javafx/tools/ant/antlib.xml">
                                        <classpath path="${javafx.tools.ant.jar}" />
                                    </taskdef>
                                    <fx:application id="multibitApp"
                                                    name="MultiBit"
                                                    mainClass="${exec.mainClass}"/>
                                    <echo>Application defined.</echo>
                                    <!-- Note: this will overwrite the JAR produced by maven-jar-plugin, change destfile if you don't want this -->
                                    <fx:jar destfile="target/multibit-mac-exe.jar" verbose="true">
                                        <fx:application refid="multibitApp"/>
                                        <fx:fileset dir="target/classes"/>
                                        <fx:resources>
                                            <fx:fileset dir="target" includes="libs/*.jar"/>
                                        </fx:resources>
                                    </fx:jar>
                                    <echo>Jar created.</echo>
                                    <fx:deploy  width="600" height="400" outdir="target-mac" embedJNLP="true" verbose="true" outfile="MultiBit" nativeBundles="all">
                                        <fx:application refid="multibitApp"/>
                                        <fx:resources>
                                            <!-- If you changed <fx:jar> above, don't forget to modify the line below -->
                                            <fx:fileset dir="target" includes="multibit-mac-exe.jar"/>
                                            <fx:fileset dir="target" includes="libs/*.jar"/>
                                        </fx:resources>
                                        <fx:permissions/>
                                    </fx:deploy>
                                    <echo>End of Ant tasks.</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.google</groupId>
            <artifactId>bitcoinj</artifactId>
            <version>${bitcoinj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.6.4</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>13.0</version>
        </dependency>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>javafx</artifactId>
            <version>2.2.40</version>
            <systemPath>${java.home}/lib/jfxrt.jar</systemPath>
            <scope>system</scope>
        </dependency>
    </dependencies>

    <properties>
        <!-- Source encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Location of staging directory for creation of linux IzPack installer -->
        <staging.linux.dir>${project.build.directory}/linux-staging
        </staging.linux.dir>

        <!-- Version of BitCoinJ to use (multiple uses) -->
        <bitcoinj.version>0.10</bitcoinj.version>

        <!-- Version of XChange to use (multiple uses) -->
        <xchange.version>1.7.0</xchange.version>

        <!-- Version of spongycastle to use -->
        <sc-light-jdk15on.version>1.47.0.2</sc-light-jdk15on.version>

        <exec.mainClass>sample.Main</exec.mainClass>
        <javafx.tools.ant.jar>${java.home}/../lib/ant-javafx.jar</javafx.tools.ant.jar>

    </properties>
</project>